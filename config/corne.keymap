/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "accents.dtsi"
#include "keys_fr.h"

#define DEFAULT   0 // default_layer
#define SYMBOLS   1 // symbols_layer
#define FUNCTIONS 2 // functions_layer
#define CONTROL   3 // media + bluetooth + Functions keys
#define MINECRAFT 4 // minecraft_layer
#define I3        5 // layer to navigate in i3

/ {
        behaviors {
                ht: hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <500>;
                        quick-tap-ms = <200>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                mo_to: behavior_mo_to {
                        compatible = "zmk,behavior-hold-tap";
                        label = "mo_to";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&to>;
                }; //momentary on hold, to on tap
                
                #include "behavior_mod_morph.dtsi"

        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ç   |  J  |  D  |  L  | ' ? |  X  |   |  W  |  B  | O œ |  P  |  È  | ^ ! |
// | ESC  |  N  |  T  |  R  |  S  |  M  |   | , ; | U ù | E € |I trm| A Æ |  Z  |
// |AltTab|  Q  |  F  |  H  |  C  |  V  |   | . : |  G  |  É  |  Y  |  À  |  K  |
//                   |CTRL | SPC | LY |   |SHIFT| ENT | BSP |
                        bindings = <
   &kp US_CCED  &kp US_J  &kp US_D &kp US_L &squote_bvofrak         &kp US_X   &kp US_W       &kp US_B  &o_custom   &kp US_P   &ac_egrv  &caret_bvofrak
   &kp ESC      &a_custom &kp US_T &kp US_R &kp US_S                &kp US_M   &comma_bvofrak &u_custom &e_custom   &i_bvofrak &a_custom &kp US_Z 
   &mt LALT TAB &kp US_Q  &kp US_F &kp US_H &kp US_C                &kp US_V   &dot_bvofrak   &kp US_G  &kp US_EACU &kp US_Y   &ac_agrv  &kp US_K
                          &kp LCTRL &kp SPACE &mo_to I3 SYMBOLS     &kp RSHIFT &kp ENTER &kp BSPC
                        >;
                };
                symbols_layer {
// -----------------------------------------------------------------------------------------
// |   \  |  ~  |  ^  |  $  |  "  |  `  |   | [ { |  7  |  8  |  9  | - _ |  /  |
// |to def|  #  |HOME | END | DEL |  @  |   | ( ) |  1  |  2  |  3  |  0  |  *  |
// |      |  |  |  &  |  %  |  <  |  >  |   | ] } |  4  |  5  |  6  | = + |     |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp US_BSLH &kp US_TILDE &kp US_CARET &kp US_DLLR    &kp US_DQT &kp US_GRAVE   &kp US_LBKT &kp US_7 &kp US_8 &kp US_9 &kp US_MINUS &kp US_FSLH
   &to DEFAULT &kp US_HASH  &kp HOME     &kp END        &kp DEL    &kp US_AT      &PAR_cstm   &kp US_1 &kp US_2 &kp US_3 &kp US_0     &kp US_STAR
   &trans      &kp US_PIPE2 &kp US_AMPS  &kp US_PERCENT &kp US_LT  &kp US_GT      &kp US_RBKT &kp US_4 &kp US_5 &kp US_6 &kp US_EQUAL &trans
                                  &trans   &trans       &mo_to I3 FUNCTIONS       &trans         &trans      &trans
                        >;
                };

                functions_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |pg_up|     |  ↑  |     |     |     |
// |to def|BKSPC| Home| End | ESC | Del |   |pg_dn|  ←  |  ↓  |  →  |ENTER|     |
// |      |     |     |     |     |     |   |     |     |     |     |     |     |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none  &none    &none   &none    &none   &none      &kp PG_UP &none    &kp UP   &none     &none     &trans
   &to DEFAULT  &kp BSPC &kp HOME &kp END &kp ESC &kp DEL    &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp ENTER &trans
   &trans &none    &none   &none    &none   &none      &none     &none    &none    &none     &none     &kp ESC
                    	   &trans   &trans  &mo_to I3 CONTROL     &trans    &trans   &trans
                        >;
                };
                control_layer {
// -----------------------------------------------------------------------------------------
// |  F1 |  F2 |  F3 | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |prev |play |next |vol+ |vol- |mute |
// |     |     |     |     |     |     |   |     |mncrf|     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7     &kp F8        &kp F9     &kp F10      &kp F11      &kp F12
   &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &kp C_PREV &kp C_PP      &kp C_NEXT &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE
   &none      &none        &none        &none        &none        &none        &none      &to MINECRAFT &none      &none        &none        &none
                                        &trans       &trans       &mo_to I3 DEFAULT       &trans     &trans   &trans
                        >;
                };
                minecraft_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  1  |  W  |  E  |  R  |   |     |       |     |     |     |         |
// | TAB |SHIFT|  A  |  S  |  D  |  L  |   |     |DEFAULT|     |     |     |         |
// |  F5 |  F  |     |  H  |  G  |  B  |   |     |       |     |     |     |         |
//                   | CTRL| F3  |SPACE|   |     |       |     |
                        bindings = <
   &kp ESC &kp US_Q   &kp US_1 &kp US_W &kp US_E &kp US_R   &none &none       &none &none &none &none
   &kp TAB &kp LSHIFT &kp US_A &kp US_S &kp US_D &kp US_L   &none &to DEFAULT &none &none &none &none
   &kp F5  &kp US_F   &none    &kp US_H &kp US_G &kp US_B   &none &none       &none &none &none &none
                              &kp LCTRL &kp F3   &kp SPACE  &none &none &none
                        >;
                };
                i3_layer {
// -----------------------------------------------------------------------------------------
// |  5  |  6  |  7  |  8  |  9  |  0  |   |     |  E  |  W  |  S  |     |     |
// |  Q  |  4  |  3  |  2  |  1  |  D  |   |     |  ←  |  ↓  |  ↑  |  →  |     |
// |     |     |  F  |  H  |  R  |  S  |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &kp LG(US_5) &kp LG(US_6) &kp LG(US_7) &kp LG(US_8) &kp LG(US_9) &kp LG(US_0)   &none &LG(US_E) &LG(US_W) &LG(US_S) &none      &none
   &kp LG(US_Q) &kp LG(US_4) &kp LG(US_3) &kp LG(US_2) &kp LG(US_1) &kp LG(US_D)   &none &LG(LEFT) &LG(DOWN) &LG(UP)   &LG(RIGHT) &none
   &trans       &trans       &kp LG(US_F) &kp LG(US_H) &kp LG(US_R) &kp LG(US_V)   &none &none     &none     &none     &none      &none
                                          &trans       &trans       &mo I3         &trans &trans &trans
                        >;
                };
        };
};

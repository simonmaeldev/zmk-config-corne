/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "accents.dtsi"
#include "keys_fr.h"
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <../boards/shields/corne/boards/nice_nano.overlay>

// Overwrite number of leds on the keyboard. A Corne has 27 per side.
&led_strip { chain-length = <27>; };

#define DEFAULT    0 // default_layer
#define I3    1 // navigation in i3
#define NAVIGATION    2 // navigation classique
#define NUMEROS  3 // numeros

/ {
        behaviors {
                #include "behavior_mod_morph.dtsi"
                ht: hold_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOLD_TAP";
                        #binding-cells = <2>;
                        tapping-term-ms = <500>;
                        quick-tap-ms = <200>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                mo_to: behavior_mo_to {
                        compatible = "zmk,behavior-hold-tap";
                        label = "mo_to";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&to>;
                }; //momentary on hold, to on tap
        };
        macros {
                macro_diff: macro_diff {
                        label = "macro_diff";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&macro_tap &kp EXCL &kp EQUAL>;
                };
                macro_chevrons: macro_chevrons {
                        label = "macro_chevrons";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&macro_tap &kp LT &kp GT &kp LEFT>;
                };
        };
        combos {
                compatible = "zmk,combos";
                combo_paro {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&all_paro>;
                };
                combo_cut {
                        timeout-ms = <50>;
                        key-positions = <26 28>;
                        bindings = <&kp K_CUT>;
                };
                combo_copy {
                        timeout-ms = <50>;
                        key-positions = <26 27>;
                        bindings = <&kp K_COPY>;
                };
                combo_paste {
                        timeout-ms = <50>;
                        key-positions = <27 28>;
                        bindings = <&kp K_PASTE>;
                };
                combo_undo {
                        timeout-ms = <50>;
                        key-positions = <25 28>;
                        bindings = <&kp K_UNDO>;
                };
                combo_redo {
                        timeout-ms = <50>;
                        key-positions = <25 29>;
                        bindings = <&kp K_REDO>;
                };
                combo_select_all {
                        timeout-ms = <50>;
                        key-positions = <25 26>;
                        bindings = <&kp LC(A)>;
                };
                combo_caps_word {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        bindings = <&caps_word>;
                };
                combo_lt {
                        timeout-ms = <50>;
                        key-positions = <7 8>;
                        bindings = <&kp LT>;
                };
                combo_gt {
                        timeout-ms = <50>;
                        key-positions = <8 9>;
                        bindings = <&kp GT>;
                };
                combo_chevrons {
                        timeout-ms = <50>;
                        key-positions = <7 9>;
                        bindings = <&macro_chevrons>;
                };
                combo_slh {
                        timeout-ms = <50>;
                        key-positions = <18 19>;
                        bindings = <&all_slh>;
                };
                combo_star {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp STAR>;
                };
                combo_at {
                        timeout-ms = <50>;
                        key-positions = <19 21>;
                        bindings = <&kp AT>;
                };
                combo_hash {
                        timeout-ms = <50>;
                        key-positions = <21 22>;
                        bindings = <&kp HASH>;
                };
                combo_prc {
                        timeout-ms = <50>;
                        key-positions = <19 22>;
                        bindings = <&kp PERCENT>;
                };
                combo_and {
                        timeout-ms = <50>;
                        key-positions = <20 21>;
                        bindings = <&kp AMPS>;
                };
                combo_diff {
                        timeout-ms = <50>;
                        key-positions = <6 7>;
                        bindings = <&macro_diff>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | Tab |  B  |  M  |  D  |  P  |  K  |   | ! ? |  H  | , ; | ' " |  Y  |  à  |
// |  J  |  N  |  T  |  R  |  I  |  F  |   |  é  |  S  |  E  |  A  |  U  | _ - |
// |  V  |  W  |  C  |  L  |  G  |  Q  |   |  X  |  O  | . : | ^ " |  è  |  Z  |
//                   |RALT |SUPR | SPC |   |ENTER| DEL | ESC |
                        bindings = <
   &kp TAB   &kp US_B      &kp US_M        &kp US_D       &kp US_P        &kp US_K      &dot_cstm   &kp US_H        &comma_bvofrak      &quotes            &kp US_Y           &ac_agrv
   &kp US_J  &mt LGUI US_N &mt LALT US_T   &mt LCTRL US_R &mt LSHIFT US_I &kp US_F      &kp US_EACU &mt LSHIFT US_S &mt LCTRL &e_custom &mt LALT &a_custom &mt LGUI &u_custom &equal 
   &kp US_V  &kp US_W      &cced_custom    &kp US_L       &kp US_G        &kp US_Q      &kp US_X    &o_custom       &dot_bvofrak        &accents_fr        &ac_egrv           &kp US_Z
                          &lt NUMEROS RALT &lt NAVIGATION DEL &lt I3 SPACE          &kp RET     &kp BSPC   &kp ESC
                        >;
                };
                i3_layer {
// -----------------------------------------------------------------------------------------
// |wintb|  6  |  7  |  8  |  9  |  0  |   |     |     |     |     |     |     |
// |     |  5  |  4  |  3  |  2  |  1  |   |     |  ←  |  ↓  |  ↑  |  →  |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |SHIFT|     |     |
                        bindings = <
   &kp LG(TAB) &kp LG(US_6) &kp LG(US_7) &kp LG(US_8) &kp LG(US_9) &kp LG(US_0)   &none &none        &none        &none      &none         &none 
   &none       &kp LG(US_5) &kp LG(US_4) &kp LG(US_3) &kp LG(US_2) &kp LG(US_1)   &none &kp LG(LEFT) &kp LG(DOWN) &kp LG(UP) &kp LG(RIGHT) &none
   &none       &none        &none        &none        &none        &none          &none &none        &none        &none      &none         &none
                                         &none        &none        &none          &kp LSHIFT &none  &none
                        >;
                };
                navigation_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |PG_UP|HOME | END |     |     |     |
// |     | GUI | ALT | CTRL|SHIFT|     |   |PG_DN|  ←  |  ↓  |  ↑  |  →  |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &none &none    &none    &none     &none      &none      &kp PG_UP &kp HOME &kp END  &none  &none     &none 
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none      &kp PG_DN &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
   &none &none    &none    &none     &none      &none      &none     &none    &none    &none  &none     &none
                                  &none &none &none      &none &none  &none
                        >;
                };
              num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |) } ]|  7  |  8  |  9  |  +  |  *  |
// |     | GUI | ALT | CTRL|SHIFT|     |   |  0  |  4  |  5  |  6  |  .  |  =  |
// |     |     |     |     |     |     |   | < > |  1  |  2  |  3  |  -  |  /  |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &none &none &none &none &none &none      &all_parf &kp N7 &kp N8 &kp N9 &kp PLUS &kp STAR 
   &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none      &kp N0 &kp N4 &kp N5 &kp N6 &kp DOT &kp EQUAL
   &none &none &none &none &none &none      &lgt &kp N1 &kp N2 &kp N3 &kp MINUS &kp FSLH
                     &none &none &none      &none &none  &none
                        >;
                };
//                control_layer {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2 |  F3 | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12 |
// |to def| OUT | BR- | BR+ | EFF | TOG |   |     |     |     |     |mncrf|     |
// |BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |prev |play |next |vol+ |vol- |mute |
//                   |     |     |     |   |     |     |     |
//                        bindings = <
//   &kp F1      &kp F2       &kp F3          &kp F4          &kp F5          &kp F6          &kp F7     &kp F8   &kp F9     &kp F10      &kp F11       &kp F12
//   &to DEFAULT &out OUT_TOG &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_EFF &rgb_ug RGB_TOG &none      &none    &none      &none        &to MINECRAFT &none
//   &bt BT_CLR  &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_UP &kp C_VOL_DN  &kp C_MUTE
//                                        &trans       &trans       &mo_to NAVIGATION DEFAULT       &trans     &trans   &trans
//                        >;
//                };
//                minecraft_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  1  |  W  |  E  |  R  |   |     |       |     |     |     |DEFAULT|
// | TAB |SHIFT|  A  |  S  |  D  |  L  |   |     |       |     |     |     |       |
// |  F5 |  F  |     |  H  |  G  |  B  |   |     |       |     |     |     |       |
//                   | CTRL| F3  |SPACE|   |     |       |     |
//                        bindings = <
//   &kp ESC &kp US_Q   &kp US_1 &kp US_W &kp US_E &kp US_R   &none &none &none &none &none &to DEFAULT
//   &kp TAB &kp LSHIFT &kp US_A &kp US_S &kp US_D &kp US_L   &none &none &none &none &none &none
//   &kp F5  &kp US_F   &none    &kp US_H &kp US_G &kp US_B   &none &none &none &none &none &none
//                              &kp LCTRL &kp F3   &kp SPACE  &none &none &none
//                        >;
//                };
                //default_layer {
// -----------------------------------------------------------------------------------------
// | Tab | ? ! |  Y  |  P  |  O  | / = |   |'`"^ |  L  |  D  |  M  |  J  | ' " |
// | ESC |  A  |  U  |  I  |  E  | ( { |   | . : |  S  |  T  |  N  |  R  |  F  |
// | Alt |  Z  |  X  |  C  |  V  |  B  |   | , ; |  H  |  G  |  W  |  Q  |  K  |
//                   |CTRL | SPC | LY  |   |SHIFT| ENT | BSP |
                        //bindings = <
   //&kp TAB  &dot_cstm &kp US_Y  &kp US_P &o_custom &slheq        &all_accent    &kp US_L &kp US_D &kp US_M &kp US_J &quotes
   //&kp ESC  &mt LGUI &a_custom &mt LCTRL &u_custom &mt RALT US_I &mt LSHIFT &e_custom &parbrc       &dot_bvofrak   &mt LSHIFT US_S &mt RALT US_T &mt LCTRL US_N &mt LGUI US_R &kp US_F 
   //&kp RALT &kp US_Z  &kp US_X  &kp US_C &kp US_V  &kp US_B      &comma_bvofrak &kp US_H &kp US_G &kp US_W &kp US_Q &kp US_K
                          //&kp LCTRL &kp SPACE &mo_to NAVIGATION SYMBOLS          &kp RSHIFT     &kp RET   &kp BSPC
                        //>;
                //};
//              none_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
//                        bindings = <
//   &none &none &none &none &none &none      &none &none &none &none &none &none 
//   &none &none &none &none &none &none      &none &none &none &none &none &none
//   &none &none &none &none &none &none      &none &none &none &none &none &none
//                     &none &none &none      &none &none  &none
//                        >;
//                };
        };
};
